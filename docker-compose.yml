version: '3.9'

services:
  redis:
    image: 'redis:latest'
    container_name: redis
    ports:
      - '6379:6379'
    command: [ "redis-server" ]
  #      volumes:
  #        - ./redis.conf:/etc/redis/redis.conf
  keycloak:
    image: quay.io/keycloak/keycloak:22.0.3
    ports:
      - "8080:8080"
    environment:
      - KEYCLOAK_ADMIN=admin
      - KEYCLOAK_ADMIN_PASSWORD=admin
      - DEBUG=true
      - DB_VENDOR=POSTGRES
      - DB_ADDR=postgres
      - DB_PORT=5432
      - DB_DATABASE=dev
      - DB_USER=postgres
      - DB_PASSWORD=phale50
    depends_on:
      - postgres
    command:
      - start-dev
    volumes:
      - ./auth/import:/opt/keycloak/data/import
    networks:
      - backend

  postgres:
    image: postgres:15.5-alpine3.19
    volumes:
      - ./postgres_data:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: dev
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: phale50
    ports:
      - "5432:5432"
    networks:
      - backend

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    ports:
      - 2181:2181
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    networks:
      - backend

  kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    environment:
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:29092,PLAINTEXT_INTERNAL://broker:29092
      KAFKA_CREATE_TOPIC: "vitech:notification:1:3"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
    ports:
      - 29092:29092
    networks:
      - backend
  # command:
  #kafka-topics --create --bootstrap-server localhost:29092 --replication-factor 1 --partitions 1 --topic TutorialTopic
  # kafka-topics --delete --topic TutorialTopic --bootstrap-server localhost:29092

networks:
  backend:
    name: backend
    driver: bridge

volumes:
  postgres_data:
    driver: local
